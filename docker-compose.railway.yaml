services:
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    environment:
      # Railway will inject these via environment variables
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JUDGE_HOST=${JUDGE_HOST}
      - JUDGE_PORT=${JUDGE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-mini_competition_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    restart: unless-stopped
    depends_on:
      - backend

  mini-judge:
    build:
      context: ../../Mini-Judge
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s